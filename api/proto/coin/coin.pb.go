// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: api/proto/coin/coin.proto

package coin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to get balance
type GetBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WarriorId     uint32                 `protobuf:"varint,1,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{0}
}

func (x *GetBalanceRequest) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

// Response with balance
type GetBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WarriorId     uint32                 `protobuf:"varint,1,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	Balance       int64                  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceResponse) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

func (x *GetBalanceResponse) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

// Request to deduct coins
type DeductCoinsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WarriorId     uint32                 `protobuf:"varint,1,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // e.g., "weapon_purchase", "item_buy", etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeductCoinsRequest) Reset() {
	*x = DeductCoinsRequest{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeductCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductCoinsRequest) ProtoMessage() {}

func (x *DeductCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductCoinsRequest.ProtoReflect.Descriptor instead.
func (*DeductCoinsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{2}
}

func (x *DeductCoinsRequest) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

func (x *DeductCoinsRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DeductCoinsRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Response after deduction
type DeductCoinsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	WarriorId     uint32                 `protobuf:"varint,2,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	BalanceBefore int64                  `protobuf:"varint,3,opt,name=balance_before,json=balanceBefore,proto3" json:"balance_before,omitempty"`
	BalanceAfter  int64                  `protobuf:"varint,4,opt,name=balance_after,json=balanceAfter,proto3" json:"balance_after,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeductCoinsResponse) Reset() {
	*x = DeductCoinsResponse{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeductCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductCoinsResponse) ProtoMessage() {}

func (x *DeductCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductCoinsResponse.ProtoReflect.Descriptor instead.
func (*DeductCoinsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{3}
}

func (x *DeductCoinsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeductCoinsResponse) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

func (x *DeductCoinsResponse) GetBalanceBefore() int64 {
	if x != nil {
		return x.BalanceBefore
	}
	return 0
}

func (x *DeductCoinsResponse) GetBalanceAfter() int64 {
	if x != nil {
		return x.BalanceAfter
	}
	return 0
}

func (x *DeductCoinsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to add coins
type AddCoinsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WarriorId     uint32                 `protobuf:"varint,1,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // e.g., "quest_reward", "login_bonus", etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCoinsRequest) Reset() {
	*x = AddCoinsRequest{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCoinsRequest) ProtoMessage() {}

func (x *AddCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCoinsRequest.ProtoReflect.Descriptor instead.
func (*AddCoinsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{4}
}

func (x *AddCoinsRequest) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

func (x *AddCoinsRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddCoinsRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Response after adding coins
type AddCoinsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	WarriorId     uint32                 `protobuf:"varint,2,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	BalanceBefore int64                  `protobuf:"varint,3,opt,name=balance_before,json=balanceBefore,proto3" json:"balance_before,omitempty"`
	BalanceAfter  int64                  `protobuf:"varint,4,opt,name=balance_after,json=balanceAfter,proto3" json:"balance_after,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCoinsResponse) Reset() {
	*x = AddCoinsResponse{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCoinsResponse) ProtoMessage() {}

func (x *AddCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCoinsResponse.ProtoReflect.Descriptor instead.
func (*AddCoinsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{5}
}

func (x *AddCoinsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddCoinsResponse) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

func (x *AddCoinsResponse) GetBalanceBefore() int64 {
	if x != nil {
		return x.BalanceBefore
	}
	return 0
}

func (x *AddCoinsResponse) GetBalanceAfter() int64 {
	if x != nil {
		return x.BalanceAfter
	}
	return 0
}

func (x *AddCoinsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to transfer coins
type TransferCoinsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromWarriorId uint32                 `protobuf:"varint,1,opt,name=from_warrior_id,json=fromWarriorId,proto3" json:"from_warrior_id,omitempty"`
	ToWarriorId   uint32                 `protobuf:"varint,2,opt,name=to_warrior_id,json=toWarriorId,proto3" json:"to_warrior_id,omitempty"`
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferCoinsRequest) Reset() {
	*x = TransferCoinsRequest{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCoinsRequest) ProtoMessage() {}

func (x *TransferCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCoinsRequest.ProtoReflect.Descriptor instead.
func (*TransferCoinsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{6}
}

func (x *TransferCoinsRequest) GetFromWarriorId() uint32 {
	if x != nil {
		return x.FromWarriorId
	}
	return 0
}

func (x *TransferCoinsRequest) GetToWarriorId() uint32 {
	if x != nil {
		return x.ToWarriorId
	}
	return 0
}

func (x *TransferCoinsRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferCoinsRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Response after transfer
type TransferCoinsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	FromWarriorId uint32                 `protobuf:"varint,2,opt,name=from_warrior_id,json=fromWarriorId,proto3" json:"from_warrior_id,omitempty"`
	ToWarriorId   uint32                 `protobuf:"varint,3,opt,name=to_warrior_id,json=toWarriorId,proto3" json:"to_warrior_id,omitempty"`
	Amount        int64                  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferCoinsResponse) Reset() {
	*x = TransferCoinsResponse{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCoinsResponse) ProtoMessage() {}

func (x *TransferCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCoinsResponse.ProtoReflect.Descriptor instead.
func (*TransferCoinsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{7}
}

func (x *TransferCoinsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransferCoinsResponse) GetFromWarriorId() uint32 {
	if x != nil {
		return x.FromWarriorId
	}
	return 0
}

func (x *TransferCoinsResponse) GetToWarriorId() uint32 {
	if x != nil {
		return x.ToWarriorId
	}
	return 0
}

func (x *TransferCoinsResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferCoinsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to get transaction history
type GetTransactionHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WarriorId     uint32                 `protobuf:"varint,1,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // optional, default 50
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"` // optional, default 0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionHistoryRequest) Reset() {
	*x = GetTransactionHistoryRequest{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionHistoryRequest) ProtoMessage() {}

func (x *GetTransactionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransactionHistoryRequest) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

func (x *GetTransactionHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTransactionHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response with transaction history
type GetTransactionHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*Transaction         `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionHistoryResponse) Reset() {
	*x = GetTransactionHistoryResponse{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionHistoryResponse) ProtoMessage() {}

func (x *GetTransactionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionHistoryResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetTransactionHistoryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Transaction record
type Transaction struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WarriorId       uint32                 `protobuf:"varint,2,opt,name=warrior_id,json=warriorId,proto3" json:"warrior_id,omitempty"`
	Amount          int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`                                         // positive for add, negative for deduct
	TransactionType string                 `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"` // "add", "deduct", "transfer_in", "transfer_out"
	Reason          string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_api_proto_coin_coin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_coin_coin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_api_proto_coin_coin_proto_rawDescGZIP(), []int{10}
}

func (x *Transaction) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Transaction) GetWarriorId() uint32 {
	if x != nil {
		return x.WarriorId
	}
	return 0
}

func (x *Transaction) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *Transaction) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_api_proto_coin_coin_proto protoreflect.FileDescriptor

const file_api_proto_coin_coin_proto_rawDesc = "" +
	"\n" +
	"\x19api/proto/coin/coin.proto\x12\x04coin\x1a\x1fgoogle/protobuf/timestamp.proto\"2\n" +
	"\x11GetBalanceRequest\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x01 \x01(\rR\twarriorId\"M\n" +
	"\x12GetBalanceResponse\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x01 \x01(\rR\twarriorId\x12\x18\n" +
	"\abalance\x18\x02 \x01(\x03R\abalance\"c\n" +
	"\x12DeductCoinsRequest\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x01 \x01(\rR\twarriorId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\xb4\x01\n" +
	"\x13DeductCoinsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x02 \x01(\rR\twarriorId\x12%\n" +
	"\x0ebalance_before\x18\x03 \x01(\x03R\rbalanceBefore\x12#\n" +
	"\rbalance_after\x18\x04 \x01(\x03R\fbalanceAfter\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"`\n" +
	"\x0fAddCoinsRequest\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x01 \x01(\rR\twarriorId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\xb1\x01\n" +
	"\x10AddCoinsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x02 \x01(\rR\twarriorId\x12%\n" +
	"\x0ebalance_before\x18\x03 \x01(\x03R\rbalanceBefore\x12#\n" +
	"\rbalance_after\x18\x04 \x01(\x03R\fbalanceAfter\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"\x92\x01\n" +
	"\x14TransferCoinsRequest\x12&\n" +
	"\x0ffrom_warrior_id\x18\x01 \x01(\rR\rfromWarriorId\x12\"\n" +
	"\rto_warrior_id\x18\x02 \x01(\rR\vtoWarriorId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\xaf\x01\n" +
	"\x15TransferCoinsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12&\n" +
	"\x0ffrom_warrior_id\x18\x02 \x01(\rR\rfromWarriorId\x12\"\n" +
	"\rto_warrior_id\x18\x03 \x01(\rR\vtoWarriorId\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x03R\x06amount\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"k\n" +
	"\x1cGetTransactionHistoryRequest\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x01 \x01(\rR\twarriorId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"l\n" +
	"\x1dGetTransactionHistoryResponse\x125\n" +
	"\ftransactions\x18\x01 \x03(\v2\x11.coin.TransactionR\ftransactions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xd2\x01\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1d\n" +
	"\n" +
	"warrior_id\x18\x02 \x01(\rR\twarriorId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12)\n" +
	"\x10transaction_type\x18\x04 \x01(\tR\x0ftransactionType\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt2\xf9\x02\n" +
	"\vCoinService\x12?\n" +
	"\n" +
	"GetBalance\x12\x17.coin.GetBalanceRequest\x1a\x18.coin.GetBalanceResponse\x12B\n" +
	"\vDeductCoins\x12\x18.coin.DeductCoinsRequest\x1a\x19.coin.DeductCoinsResponse\x129\n" +
	"\bAddCoins\x12\x15.coin.AddCoinsRequest\x1a\x16.coin.AddCoinsResponse\x12H\n" +
	"\rTransferCoins\x12\x1a.coin.TransferCoinsRequest\x1a\x1b.coin.TransferCoinsResponse\x12`\n" +
	"\x15GetTransactionHistory\x12\".coin.GetTransactionHistoryRequest\x1a#.coin.GetTransactionHistoryResponseB\"Z network-sec-micro/api/proto/coinb\x06proto3"

var (
	file_api_proto_coin_coin_proto_rawDescOnce sync.Once
	file_api_proto_coin_coin_proto_rawDescData []byte
)

func file_api_proto_coin_coin_proto_rawDescGZIP() []byte {
	file_api_proto_coin_coin_proto_rawDescOnce.Do(func() {
		file_api_proto_coin_coin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_coin_coin_proto_rawDesc), len(file_api_proto_coin_coin_proto_rawDesc)))
	})
	return file_api_proto_coin_coin_proto_rawDescData
}

var file_api_proto_coin_coin_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_coin_coin_proto_goTypes = []any{
	(*GetBalanceRequest)(nil),             // 0: coin.GetBalanceRequest
	(*GetBalanceResponse)(nil),            // 1: coin.GetBalanceResponse
	(*DeductCoinsRequest)(nil),            // 2: coin.DeductCoinsRequest
	(*DeductCoinsResponse)(nil),           // 3: coin.DeductCoinsResponse
	(*AddCoinsRequest)(nil),               // 4: coin.AddCoinsRequest
	(*AddCoinsResponse)(nil),              // 5: coin.AddCoinsResponse
	(*TransferCoinsRequest)(nil),          // 6: coin.TransferCoinsRequest
	(*TransferCoinsResponse)(nil),         // 7: coin.TransferCoinsResponse
	(*GetTransactionHistoryRequest)(nil),  // 8: coin.GetTransactionHistoryRequest
	(*GetTransactionHistoryResponse)(nil), // 9: coin.GetTransactionHistoryResponse
	(*Transaction)(nil),                   // 10: coin.Transaction
	(*timestamppb.Timestamp)(nil),         // 11: google.protobuf.Timestamp
}
var file_api_proto_coin_coin_proto_depIdxs = []int32{
	10, // 0: coin.GetTransactionHistoryResponse.transactions:type_name -> coin.Transaction
	11, // 1: coin.Transaction.created_at:type_name -> google.protobuf.Timestamp
	0,  // 2: coin.CoinService.GetBalance:input_type -> coin.GetBalanceRequest
	2,  // 3: coin.CoinService.DeductCoins:input_type -> coin.DeductCoinsRequest
	4,  // 4: coin.CoinService.AddCoins:input_type -> coin.AddCoinsRequest
	6,  // 5: coin.CoinService.TransferCoins:input_type -> coin.TransferCoinsRequest
	8,  // 6: coin.CoinService.GetTransactionHistory:input_type -> coin.GetTransactionHistoryRequest
	1,  // 7: coin.CoinService.GetBalance:output_type -> coin.GetBalanceResponse
	3,  // 8: coin.CoinService.DeductCoins:output_type -> coin.DeductCoinsResponse
	5,  // 9: coin.CoinService.AddCoins:output_type -> coin.AddCoinsResponse
	7,  // 10: coin.CoinService.TransferCoins:output_type -> coin.TransferCoinsResponse
	9,  // 11: coin.CoinService.GetTransactionHistory:output_type -> coin.GetTransactionHistoryResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_coin_coin_proto_init() }
func file_api_proto_coin_coin_proto_init() {
	if File_api_proto_coin_coin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_coin_coin_proto_rawDesc), len(file_api_proto_coin_coin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_coin_coin_proto_goTypes,
		DependencyIndexes: file_api_proto_coin_coin_proto_depIdxs,
		MessageInfos:      file_api_proto_coin_coin_proto_msgTypes,
	}.Build()
	File_api_proto_coin_coin_proto = out.File
	file_api_proto_coin_coin_proto_goTypes = nil
	file_api_proto_coin_coin_proto_depIdxs = nil
}
